// AutoGenerated file for ChatScreenScreen
// generate date: 2024-10-16T20:01:23.636988

import 'package:audioplayers/audioplayers.dart';
import 'package:cached_network_image/cached_network_image.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:globipay_admin_panel/core/base/base_view_state.dart';
import 'package:globipay_admin_panel/core/theme/color_palettes.dart';
import 'package:globipay_admin_panel/core/widgets/app_print.dart';
import 'package:globipay_admin_panel/entity/response/message/message.dart';
import 'package:globipay_admin_panel/modules/chat/chat_screen/controller/chat_controller.dart';
import 'package:globipay_admin_panel/modules/chat/chat_screen/views/message_templates_view.dart';
import 'package:globipay_admin_panel/modules/chat/chat_screen/views/widgets/message_bars/message_bar.dart';
import 'package:globipay_admin_panel/modules/chat/chat_screen/views/widgets/message_bubble_widget.dart';
import 'package:globipay_admin_panel/modules/chat/chat_screen/views/widgets/message_date_chip.dart';

import 'widgets/message_image_bubble_widget.dart';

/**
 * Created by Abdullah on 19/10/24 08:01 PM.
 */

class ChatScreenScreenBuilder extends StatefulWidget {

  const ChatScreenScreenBuilder({super.key});


  @override
  State<ChatScreenScreenBuilder> createState() =>
      _ChatScreenScreenBuilderState();
}

class _ChatScreenScreenBuilderState
    extends BaseViewState<ChatScreenScreenBuilder, ChatController> {

  @override
  void initState() {
    controller.onInit();
    super.initState();
  }

  @override
  PreferredSizeWidget? appBar() {
    return AppBar(
      centerTitle: true,
      title: IconButton(
        icon: const Icon(Icons.lock_clock_sharp),
        onPressed: () {
          controller.onChatClose(context);
        },

      ),
      actions: [
        IconButton(
          color: ColorPalettes.colorPrimary,
          icon: const Icon(CupertinoIcons.phone_solid),
          onPressed: () {
            controller.onAudioCall();
          },
        ),
        IconButton(
          color: ColorPalettes.colorPrimary,
          icon: const Icon(CupertinoIcons.video_camera),
          onPressed: () {
            controller.onVideoCall();
          },
          iconSize: 34,
        ),
      ],
    );
  }

  AudioPlayer audioPlayer = AudioPlayer();
  Duration duration = new Duration();
  Duration position = new Duration();
  bool isPlaying = false;
  bool isLoading = false;
  bool isPause = false;

  @override
  Widget body(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.all(8.0),
      child: Scaffold(
        resizeToAvoidBottomInset: true,
        body: Obx(
              () => Row(
            children: [
              // Chat Section
              Expanded(
                flex: controller.showTemplates.value ? 4 : 6, // Dynamic width
                child: Column(
                  children: [
                    Expanded(
                      child: ListView.builder(
                        itemCount: controller.messages.length,
                        controller: controller.scrollController,
                        itemBuilder: (context, index) {
                          return messageContent(controller.messages, index);
                        },
                      ),
                    ),
                    MessageBar(
                      textController: controller.messageController,
                      onSend: (text) {
                        controller.sendTextMessage(text);
                      },
                      actions: [
                        Padding(
                          padding: const EdgeInsets.symmetric(horizontal: 8),
                          child: GestureDetector(
                            child: const Icon(
                              Icons.menu,
                              color: Colors.grey,
                            ),
                            onTap: () {
                              controller.showTemplates.toggle(); // Toggle split view
                            },
                          ),
                        ),
                        Padding(
                          padding: const EdgeInsets.symmetric(horizontal: 8),
                          child: GestureDetector(
                            child: const Icon(
                              Icons.insert_comment,
                              color: Colors.grey,
                            ),
                            onTap: () {
                              controller.showTemplates.toggle(); // Toggle split view
                            },
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),

              // Template Section
              if (controller.showTemplates.value)
                Expanded(
                  flex: 2,
                  child: MessageTemplatesView(controller),
                ),
            ],
          ),
        ),
      ),
    );
  }


  Widget messageContent(List<Message> chat, int index){
    final chat = controller.messages.value[index];
    final messageDate = DateTime.parse(chat.created_at ?? "").day;
    final nextMessageDate = index + 1 < controller.messages.value.length
        ? DateTime.parse(controller.messages.value[index + 1].created_at ?? "").day
        : null;
    bool showDate = messageDate != nextMessageDate;

    return Column(
      children: [

        if (showDate)
        DateChip(
            date: DateTime.parse(chat.created_at ?? ""),
        ),

        if (chat.message_type == "image")
          BubbleNormalImage(
            id: chat.id ?? "",
            image: CachedNetworkImage(
               imageUrl: chat.media_url ?? "",
              height: 140,
              width: 140,
            ),
            isSender: chat.sender_id == controller.sharedController.currentUserId,
            delivered: chat.delivered_at != null,
            sent: true,
            seen: chat.seen_at != null,
          ),
        if(chat.message_type == 'text')
          BubbleSpecialThree(
          text: chat.message ?? "",
          color: ColorPalettes.colorPrimary,
          tail: true,
          isSender: chat.sender_id == controller.sharedController.currentUserId,
          delivered: chat.delivered_at != null,
          sent: true,
          seen: chat.seen_at != null,
          textStyle: const TextStyle(color: Colors.white, fontSize: 16),
        )
      ],
    );

  }
}
